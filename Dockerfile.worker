FROM gcr.io/google-containers/debian-base-amd64:v2.0.0

RUN apt-get update && \
  apt-get upgrade -y && \
  apt-get install -y unzip ca-certificates curl bash git && \
  rm -rf /var/lib/apt/lists/*

ENV PUB_ENVIRONMENT="bot.pub_dev.pub_worker"
ENV CI="true"

# Configure a 'worker' user, to avoid running processes as root when this is not
# necessary (this is just docker hardening).
RUN groupadd -r worker -g 2000 && useradd --no-log-init -r -m -g worker worker
USER worker:2000

# Install pub-dev
COPY --chown=worker:worker . /home/worker/pub-dev
WORKDIR /home/worker/pub-dev

# Setup Dart SDK into /home/worker/dart/{stable,preview}/
RUN tool/setup-dart.sh /home/worker/dart 2.19.3
RUN mv /home/worker/dart/dart-sdk /home/worker/dart/stable
RUN tool/setup-dart.sh /home/worker/dart 3.0.0-218.1.dev
RUN mv /home/worker/dart/dart-sdk /home/worker/dart/preview

# Setup Flutter SDK into /home/worker/flutter/{stable,preview}/
RUN tool/setup-flutter.sh /home/worker/flutter 3.7.6
RUN mv /home/worker/flutter/flutter /home/worker/flutter/stable
RUN tool/setup-flutter.sh /home/worker/flutter 3.8.0-10.1.pre
RUN mv /home/worker/flutter/flutter /home/worker/flutter/preview
RUN tool/setup-flutter.sh /home/worker/flutter master
RUN mv /home/worker/flutter/flutter /home/worker/flutter/future

# Configure SDKs to be used for analysis
ENV DART_SDK="/home/worker/dart/stable"
ENV FLUTTER_ROOT="/home/worker/flutter/stable"

# Use stable Dart-SDK in PATH
ENV PATH="/home/worker/dart/stable/bin:${PATH}"

# Install dependencies for pub_worker
WORKDIR /home/worker/pub-dev/pkg/pub_worker
RUN dart pub get

# This container image is launched by cloud-init, and cloud-init is responsible
# for shutting down the VM when the container exits.
ENTRYPOINT ["dart", "bin/pub_worker.dart"]
